@model List<ChhayaNirh.Models.Chat>
@{
    ViewBag.Title = "Chat with " + ViewBag.ReceiverName;
    Layout = "~/Views/Shared/_Layout.cshtml";
    var currentUserId = Convert.ToInt32(Session["UserId"]);
    var receiverId = ViewBag.ReceiverId;
}

<style>
    .chat-container {
        max-width: 800px;
        margin: 20px auto;
        background: white;
        border-radius: 12px;
        box-shadow: 0 2px 12px rgba(0, 0, 0, 0.1);
        overflow: hidden;
        height: 80vh;
        display: flex;
        flex-direction: column;
    }

    .chat-header {
        background-color: #5C0002;
        color: white;
        padding: 15px 20px;
        display: flex;
        align-items: center;
        gap: 15px;
        flex-shrink: 0;
    }

    .back-btn {
        background: rgba(255, 255, 255, 0.2);
        border: none;
        color: white;
        width: 40px;
        height: 40px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        font-size: 18px;
        transition: background-color 0.3s ease;
    }

    .back-btn:hover {
        background: rgba(255, 255, 255, 0.3);
    }

    .chat-title {
        font-size: 20px;
        font-weight: 600;
        margin: 0;
    }

    .chat-box {
        flex-grow: 1;
        overflow-y: auto;
        padding: 20px;
        display: flex;
        flex-direction: column;
        gap: 15px;
        background-color: #FFFFF0;
    }

    .chat-message {
        display: flex;
        margin-bottom: 10px;
    }

    .chat-message.sent {
        justify-content: flex-end;
    }

    .chat-message.received {
        justify-content: flex-start;
    }

    .message-bubble {
        max-width: 70%;
        padding: 12px 16px;
        border-radius: 20px;
        word-wrap: break-word;
        position: relative;
    }

    .message-bubble.sent {
        background-color: #5C0002;
        color: white;
        border-bottom-right-radius: 6px;
    }

    .message-bubble.received {
        background-color: #e4e6ea;
        color: #333;
        border-bottom-left-radius: 6px;
    }

    .message-text {
        margin: 0;
        font-size: 14px;
        line-height: 1.4;
    }

    .message-time {
        font-size: 11px;
        opacity: 0.7;
        margin-top: 4px;
        display: block;
    }

    .message-input-container {
        padding: 15px 20px;
        background-color: white;
        border-top: 1px solid #e4e6ea;
        flex-shrink: 0;
    }

    .message-input-form {
        display: flex;
        align-items: flex-end;
        gap: 10px;
    }

    .message-input {
        flex-grow: 1;
        resize: none;
        border: 2px solid #e4e6ea;
        border-radius: 25px;
        padding: 12px 16px;
        font-size: 14px;
        line-height: 1.4;
        min-height: 24px;
        max-height: 100px;
        outline: none;
        transition: border-color 0.3s ease;
        background-color: #f8f9fa;
    }

    .message-input:focus {
        border-color: #5C0002;
        background-color: white;
    }

    .send-btn {
        background-color: #5C0002;
        color: white;
        border: none;
        width: 50px;
        height: 50px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        font-size: 18px;
        transition: background-color 0.3s ease;
        flex-shrink: 0;
    }

    .send-btn:hover:not(:disabled) {
        background-color: #7a1a1c;
    }

    .send-btn:disabled {
        background-color: #ccc;
        cursor: not-allowed;
    }

    .no-messages {
        text-align: center;
        color: #65676b;
        padding: 40px 20px;
    }

    .no-messages i {
        font-size: 48px;
        margin-bottom: 15px;
        color: #ddd;
    }

    .typing-indicator {
        display: none;
        padding: 8px 16px;
        background-color: #e4e6ea;
        border-radius: 20px;
        color: #65676b;
        font-style: italic;
        font-size: 13px;
        align-self: flex-start;
        max-width: 100px;
    }

    /* Auto-scroll to bottom */
    .chat-box {
        scroll-behavior: smooth;
    }

    /* Mobile responsive */
 
</style>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />

<div class="chat-container">
    <div class="chat-header">
        <button class="back-btn" onclick="goBack()">
            <i class="fas fa-arrow-left"></i>
        </button>
        <h3 class="chat-title">@ViewBag.ReceiverName</h3>
    </div>

    <div class="chat-box" id="chatBox">
        @if (Model != null && Model.Any())
        {
            foreach (var msg in Model)
            {
                <div class="chat-message @(msg.SenderId == currentUserId ? "sent" : "received")">
                    <div class="message-bubble @(msg.SenderId == currentUserId ? "sent" : "received")">
                        <p class="message-text">@msg.MessageText</p>
                        <span class="message-time">@msg.SentAt.ToString("HH:mm")</span>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="no-messages">
                <i class="fas fa-comment"></i>
                <p>No messages yet. Start the conversation!</p>
            </div>
        }

        <div class="typing-indicator" id="typingIndicator">
            Someone is typing...
        </div>
    </div>

    <div class="message-input-container">
        @using (Html.BeginForm("SendMessage", "Chat", FormMethod.Post, new { @class = "message-input-form", id = "messageForm" }))
        {
            @Html.AntiForgeryToken()
            <input type="hidden" name="ReceiverId" value="@receiverId" />
            <textarea name="MessageText"
                      id="messageInput"
                      class="message-input"
                      placeholder="Type a message..."
                      required
                      rows="1"
                      onkeydown="handleKeyDown(event)"
                      oninput="adjustTextareaHeight(this); toggleSendButton()"></textarea>
            <button type="submit" class="send-btn" id="sendBtn" disabled>
                <i class="fas fa-paper-plane"></i>
            </button>
        }
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function() {
        // Scroll to bottom when page loads
        scrollToBottom();

        // Focus on input
        $('#messageInput').focus();

        // Auto-resize textarea and enable/disable send button
        toggleSendButton();
    });

    function scrollToBottom() {
        const chatBox = document.getElementById('chatBox');
        chatBox.scrollTop = chatBox.scrollHeight;
    }

    function adjustTextareaHeight(textarea) {
        textarea.style.height = 'auto';
        textarea.style.height = Math.min(textarea.scrollHeight, 100) + 'px';
    }

    function toggleSendButton() {
        const input = document.getElementById('messageInput');
        const sendBtn = document.getElementById('sendBtn');
        sendBtn.disabled = input.value.trim() === '';
    }

    function handleKeyDown(event) {
        if (event.key === 'Enter' && !event.shiftKey) {
            event.preventDefault();
            const form = document.getElementById('messageForm');
            const input = document.getElementById('messageInput');

            if (input.value.trim() !== '') {
                form.submit();
            }
        }
    }

    function goBack() {
         window.location.href = '@Url.Action("Chat", "Chat")';

    }

    // Optional: Auto-refresh messages every 5 seconds
    // setInterval(function() {
    //     location.reload();
    // }, 5000);
</script>